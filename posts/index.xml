<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Shubham Utwal</title>
		<link>https://darkdefender27.github.io/posts/</link>
		<description>Recent content in Posts on Shubham Utwal</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>&amp;copy; &lt;a href=&#34;https://github.com/darkdefender27&#34;&gt;Shubham Utwal&lt;/a&gt; 2016</copyright>
		<lastBuildDate>Sat, 19 Jan 2019 23:26:56 +0530</lastBuildDate>
		<atom:link href="https://darkdefender27.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>IN/Clojure 2019</title>
			<link>https://darkdefender27.github.io/posts/in-clojure-2019/</link>
			<pubDate>Sat, 19 Jan 2019 23:26:56 +0530</pubDate>
			
			<guid>https://darkdefender27.github.io/posts/in-clojure-2019/</guid>
			<description>Recently, I attended the ((((IN/Clojure)))) workshop which took place in Bangalore. The workshop was designed for two levels, a beginner &amp;amp; an intermediate one. Since, I had some previous knowledge around clojure, I signed up for the intermediate workshop.
The day of the workshop, we were expected to be ready with our own crazy setup, as long as it worked. Since, we are on the this, one could have a working clojure environment setup in Vim, Visual Studio Code, Sublime Text, Emacs, Spacemacs, IntelliJ (with Cursive) and what not.</description>
			<content type="html"><![CDATA[<p>Recently, I attended the <a href="https://inclojure.org/" target="_blank">((((IN/Clojure))))</a> workshop which took place in Bangalore. The workshop was designed for two levels, a beginner &amp; an intermediate one. Since, I had some previous knowledge around clojure, I signed up for the intermediate workshop.</p>

<p>The day of the workshop, we were expected to be ready with our own crazy setup, as long as it worked. Since, we are on the this, one could have a working clojure environment setup in <em>Vim, Visual Studio Code, Sublime Text, Emacs, Spacemacs, IntelliJ (with Cursive)</em> and what not. I now use Spacemacs having tried my hands on plain vanilla Emacs with certain tweaks <a href="https://github.com/darkdefender27/dotemacs" target="_blank">(dotfile for Emacs)</a>.</p>

<p>Every workshop/conference one has attended knows this well - it does not start without any wifi hassles. After overcoming those, we kickstarted with solving a basic problem of reading and processing data in a <em>.csv</em> file and then dumping the processed data in a database; and finally exposing a <em>GET</em> endpoint which reads &amp; omits out these records.</p>

<p>I got to replenish my stale knowledge on <em>Lazy Seq, Java Interop, REPL</em> interaction and of course <em>Spacemacs</em> shortcuts :p. The workshop further covered  concepts like Concurrency in Clojure, the motivation behind Clojure having immutable data structures, <em>Futures, Refs, Atoms, STMs,</em> a cool <code>Rock-Paper-Scissor</code> exercise demonstrating the above mentioned concepts.</p>

<p>The final segment of the workshop dealt with <code>core-async</code>. The same pattern was followed here as well, concepts and then exercises which worked-up those concepts. During this segment, I learnt how, using <em>core-async</em>, one can solve or scale the earlier problem of reading and processing data from a source, when your source is emitting out data in realtime (Streams!). To end the workshop, we solved the exercise, using <em>core-async&rsquo;s</em> channels; the exercise already had a base streaming solution in place with appropriate expressions to be filled in the blanks.</p>

<p>The content of the workshop had a good amount of variation, it went on from basics to intermediate to some advanced clojure at an appropriate pace. A well documented workshop material is made available on <a href="https://github.com/inclojure-org/intermediate-clojure-workshop/" target="_blank">Github</a>. So, just clone your way into the world of Fun Fun Functions!</p>
]]></content>
		</item>
		
		<item>
			<title>Apache Wsgi Configuration</title>
			<link>https://darkdefender27.github.io/posts/apache-wsgi-configuration/</link>
			<pubDate>Sat, 17 Feb 2018 12:44:44 +0530</pubDate>
			
			<guid>https://darkdefender27.github.io/posts/apache-wsgi-configuration/</guid>
			<description>TLDR; In this post I have put down my experience in configuring apache to interact with apps written in Python.
The bulk of this post is about how to set up Gunicorn as a WSGI HTTP Server to launch Python application(s) using the Flask micro-framework and Apache to act as a frontend reverse proxy.</description>
			<content type="html"><![CDATA[<p>TLDR; In this post I have put down my experience in configuring apache to interact with apps written in Python.</p>

<p>The bulk of this post is about how to set up Gunicorn as a WSGI HTTP Server to launch Python application(s) using the Flask micro-framework and Apache to act as a frontend reverse proxy.</p>
]]></content>
		</item>
		
	</channel>
</rss>
